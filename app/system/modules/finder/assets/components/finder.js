!function t(e,n,i){function a(s,l){if(!n[s]){if(!e[s]){var o="function"==typeof require&&require;if(!l&&o)return o(s,!0);if(r)return r(s,!0);var u=new Error("Cannot find module '"+s+"'");throw u.code="MODULE_NOT_FOUND",u}var c=n[s]={exports:{}};e[s][0].call(c.exports,function(t){var n=e[s][1][t];return a(n?n:t)},c,c.exports,t,e,n,i)}return n[s].exports}for(var r="function"==typeof require&&require,s=0;s<i.length;s++)a(i[s]);return a}({1:[function(t,e,n){var i='<div v-cloak="">\n        <div class="pk-toolbar uk-form uk-clearfix">\n            <div v-if="isWritable()" class="uk-float-left">\n\n                <button class="uk-button uk-button-primary uk-form-file">\n                    {{ \'Upload\' | trans }}\n                    <input type="file" name="files[]" multiple="multiple">\n                </button>\n\n                <button class="uk-button" v-on="click: createFolder()">{{ \'Add Folder\' | trans }}</button>\n\n                <button class="uk-button pk-button-danger" v-show="selected.length" v-on="click: remove">{{ \'Delete\' | trans }}</button>\n                <button class="uk-button" v-show="selected.length === 1" v-on="click: rename">{{ \'Rename\' | trans }}</button>\n\n            </div>\n            <div class="uk-float-right uk-hidden-small">\n\n                <input type="text" placeholder="{{ \'Search\' | trans }}" v-model="search">\n\n                <div class="uk-button-group">\n                    <button class="uk-button uk-icon-bars" v-class="\'uk-active\': view == \'table\'" v-on="click: view = \'table\'"></button>\n                    <button class="uk-button uk-icon-th" v-class="\'uk-active\': view == \'thumbnail\'" v-on="click: view = \'thumbnail\'"></button>\n                </div>\n\n            </div>\n        </div>\n\n        <ul class="uk-breadcrumb pk-breadcrumb">\n            <li v-repeat="breadcrumbs" v-class="\'uk-active\': current">\n                <span v-show="current">{{ title }}</span>\n                <a v-show="!current" v-on="click: setPath(path)">{{ title }}</a>\n            </li>\n        </ul>\n\n        <div v-show="upload.running" class="uk-progress uk-progress-striped uk-active">\n            <div class="uk-progress-bar" v-style="width: upload.progress + \'%\'">{{ upload.progress }}%</div>\n        </div>\n\n        <div v-partial="{{ view }}"></div>\n\n        <div v-if="isWritable()" class="uk-placeholder uk-text-center uk-text-muted">\n            <img v-attr="src: $url(\'app/system/assets/images/finder-droparea.svg\', true)" width="22" height="22" alt="{{ \'Droparea\' | trans }}"> {{ \'Drop files here.\' | trans }}\n        </div>\n\n    </div>',a=jQuery,r=Vue.util,s={root:"/",mode:"write",view:"table",path:"/",selected:[],upload:{}},l={replace:!0,template:i,data:function(){return r.extend({},s)},ready:function(){this.resource=this.$resource("system/finder/:cmd"),this.load().success(function(){this.$dispatch("ready.finder",this)}.bind(this))},watch:{path:function(){this.load()},selected:function(){this.$dispatch("select.finder",this.getSelected(),this)}},filters:{searched:function(t){var e=this.search;return e?t.filter(function(t){return-1!==t.name.toLowerCase().indexOf(e.toLowerCase())}):t}},computed:{breadcrumbs:function(){var t="",e=[{path:"/",title:this.$trans("Home")}].concat(this.path.substr(1).split("/").filter(function(t){return t.length}).map(function(e){return{path:t+="/"+e,title:e}}));return e[e.length-1].current=!0,e}},methods:{setPath:function(t){this.$set("path",t)},getPath:function(){return this.path},getFullPath:function(){return(this.root+this.path).replace(/^\/+|\/+$/g,"")+"/"},getSelected:function(){var t=this.getFullPath();return this.selected.map(function(e){return t+e})},toggleSelect:function(t){if(t.targetVM){if("INPUT"==t.target.tagName||"A"==t.target.tagName)return;t=t.targetVM.$data.name}var e=this.selected.indexOf(t);-1===e?this.selected.push(t):this.selected.splice(e,1)},createFolder:function(){var t=prompt(this.$trans("Folder Name"),"");t&&this.command("createfolder",{name:t})},rename:function(t){if(t.target&&(t=this.selected[0]),t){var e=prompt(this.$trans("New Name"),t);e&&this.command("rename",{oldname:t,newname:e})}},remove:function(t){t.target&&(t=this.selected),t&&confirm(this.$trans("Are you sure?"))&&this.command("removefiles",{names:t})},encodeURI:function(t){return encodeURI(t).replace(/'/g,"%27")},isWritable:function(){return"w"===this.mode||"write"===this.mode},isImage:function(t){return t.match(/\.(?:gif|jpe?g|png|svg)/i)},command:function(t,e){var n=this;return this.resource.save({cmd:t},a.extend({path:this.path,root:this.root},e),function(t){UIkit.notify(t.message,t.error?"danger":"success"),n.load()}).fail(function(t){UIkit.notify(500==t.status?"Unknown error.":t.responseText,"danger")})},load:function(){return this.resource.get({path:this.path,root:this.root},function(t){this.$set("selected",[]),this.$set("folders",t.folders||[]),this.$set("files",t.files||[]),this.$dispatch("path.finder",this.getFullPath(),this)}.bind(this))}},events:{"hook:ready":function(){var t=this,e={action:this.$url("system/finder/upload"),before:function(e){a.extend(e.params,{path:t.path,root:t.root})},loadstart:function(){t.$set("upload.running",!0),t.$set("upload.progress",0)},progress:function(e){t.$set("upload.progress",Math.ceil(e))},allcomplete:function(e){var n=a.parseJSON(e);t.load(),UIkit.notify(n.message,n.error?"danger":"success"),t.$set("upload.progress",100),setTimeout(function(){t.$set("upload.running",!1)},1500)}};UIkit.uploadSelect(this.$el.querySelector(".uk-form-file > input"),e),UIkit.uploadDrop(this.$el,e)}},partials:{table:t("./table.html"),thumbnail:t("./thumbnail.html")}};Vue.component("v-finder",r.extend({},l));var o=function(t,e){return new Vue(a.extend(!0,{},l,{el:t,data:a.extend(!0,{},s,e)}))};a(function(){a("[data-finder]").each(function(){new o(this,a(this).data("finder"))})}),window.Finder=window.Finder||o,("function"==typeof e.exports?e.exports.options:e.exports).template=i},{"./table.html":2,"./thumbnail.html":3}],2:[function(t,e,n){e.exports='<div v-if="files || folders" class="uk-overflow-container">\n    <table class="uk-table uk-table-hover uk-table-middle pk-finder-table">\n        <thead>\n            <th class="pk-table-width-minimum"><input type="checkbox" v-check-all="selected: input[name=name]"></th>\n            <th colspan="2">{{ \'Name\' | trans }}</th>\n            <th class="pk-table-width-minimum uk-text-center">{{ \'Size\' | trans }}</th>\n            <th class="pk-table-width-minimum">{{ \'Modified\' | trans }}</th>\n        </thead>\n        <tbody>\n\n            <tr v-repeat="folders | searched" class="uk-visible-hover" v-on="click: toggleSelect">\n                <td><input type="checkbox" name="name" value="{{ name }}"></td>\n                <td class="pk-table-width-minimum">\n                    <i class="uk-icon-folder-o pk-finder-icon-folder"></i>\n                </td>\n                <td class="pk-table-text-break pk-table-min-width-200"><a v-on="click: setPath(path)">{{ name }}</a></td>\n                <td></td>\n                <td></td>\n            </tr>\n\n            <tr v-repeat="files | searched" class="uk-visible-hover" v-on="click: toggleSelect">\n                <td><input type="checkbox" name="name" value="{{ name }}"></td>\n                <td class="pk-table-width-minimum">\n                    <i v-if="isImage(url)" class="pk-thumbnail-icon pk-finder-icon-file" style="background-image: url(\'{{ encodeURI(url) }}\');"></i>\n                    <i v-if="!isImage(url)" class="uk-icon-file-o pk-finder-icon-file"></i>\n                </td>\n                <td class="pk-table-text-break pk-table-min-width-200">{{ name }}</td>\n                <td class="uk-text-right uk-text-nowrap">{{ size }}</td>\n                <td class="uk-text-nowrap">{{ lastmodified }}</td>\n            </tr>\n\n        </tbody>\n    </table>\n</div>\n'},{}],3:[function(t,e,n){e.exports='<ul v-if="files || folders" class="uk-grid uk-grid-width-small-1-2 uk-grid-width-large-1-3 uk-grid-width-xlarge-1-4 pk-thumbnail-border-remove" data-uk-grid-margin data-uk-grid-match="{ target:\'.uk-panel\' }">\n\n    <li v-repeat="folders | searched" v-on="click: toggleSelect">\n        <div class="uk-panel uk-panel-box uk-text-center uk-visible-hover">\n            <div class="uk-panel-teaser">\n                <div class="pk-thumbnail pk-thumbnail-folder"></div>\n            </div>\n            <div class="uk-text-truncate">\n                <input type="checkbox" value="{{ name }}" v-checkbox="selected">\n                <a v-on="click: setPath(path, $event)">{{ name }}</a>\n            </div>\n        </div>\n    </li>\n\n    <li v-repeat="files | searched" v-on="click: toggleSelect">\n        <div class="uk-panel uk-panel-box uk-text-center uk-visible-hover">\n            <div class="uk-panel-teaser">\n                <div v-if="isImage(url)" class="pk-thumbnail" style="background-image: url(\'{{ encodeURI(url) }}\');"></div>\n                <div v-if="!isImage(url)" class="pk-thumbnail pk-thumbnail-file"></div>\n            </div>\n            <div class="uk-text-nowrap uk-text-truncate">\n                <input type="checkbox" value="{{ name }}" v-checkbox="selected">\n                {{ name }}\n            </div>\n        </div>\n    </li>\n\n</ul>\n'},{}]},{},[1]);